local Module = {}

Module['PathFind'] = function(target: Vector3)
	local PathfindingService = game:GetService("PathfindingService")
	local RunService = game:GetService('RunService')
	local lp = game:GetService('Players').LocalPlayer
	local Humanoid = lp.Character.Humanoid
	local Root = lp.Character:FindFirstChild("HumanoidRootPart")
	local path = PathfindingService:CreatePath({
		AgentCanJump = true,
		WaypointSpacing = 1,
		AgentCanClimb = true
	})
	path:ComputeAsync(Root.Position, target)
	if path.Status == Enum.PathStatus.NoPath then return end
	local waypoints = path:GetWaypoints()
	for i, waypoint in ipairs(waypoints) do
		if not Humanoid then break end
		Humanoid:MoveTo(waypoint.Position)
		repeat RunService.Stepped:Wait() until not Humanoid or Humanoid.MoveDirection ~= Vector3.zero
		repeat RunService.Stepped:Wait() until not Humanoid or Humanoid.MoveDirection == Vector3.zero
		if not Humanoid then break end
		if waypoint.Action == Enum.PathWaypointAction.Jump then
			Humanoid.Jump = true
		end
	end
end

return Module
